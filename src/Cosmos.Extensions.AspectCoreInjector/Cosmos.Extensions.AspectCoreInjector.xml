<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.Extensions.AspectCoreInjector</name>
    </assembly>
    <members>
        <member name="T:AspectCore.DependencyInjection.AspectCoreInjectorExtensions">
            <summary>
            Extensions for NCC AspectCore
            </summary>
        </member>
        <member name="M:AspectCore.DependencyInjection.AspectCoreInjectorExtensions.RegisterProxyFrom(AspectCore.DependencyInjection.IServiceContext,Cosmos.Dependency.DependencyProxyRegister)">
            <summary>
            Register Proxy
            </summary>
            <param name="services"></param>
            <param name="bag"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:AspectCore.DependencyInjection.FluentAspectCoreInjectorExtensions">
            <summary>
            Extensions for NCC AspectCore
            </summary>
        </member>
        <member name="M:AspectCore.DependencyInjection.FluentAspectCoreInjectorExtensions.BeginTypedRegister``1(``0)">
            <summary>
            Begin register
            </summary>
            <param name="services"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AspectCore.DependencyInjection.FluentAspectCoreInjectorExtensions.BeginRegister``1(``0)">
            <summary>
            Begin register
            </summary>
            <param name="services"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AspectCore.DependencyInjection.FluentAspectCoreInjectorExtensions.Finish(Cosmos.Dependency.DependencyProxyRegister{AspectCore.DependencyInjection.IServiceContext})">
            <summary>
            End register
            </summary>
            <param name="register"></param>
            <returns></returns>
        </member>
        <member name="M:AspectCore.DependencyInjection.FluentAspectCoreInjectorExtensions.Finish``1(Cosmos.Dependency.DependencyProxyRegister)">
            <summary>
            End register
            </summary>
            <param name="register"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:Cosmos.Dependency.AspectCoreProxyRegister">
            <summary>
            AspectCore dependency proxy register
            </summary>
        </member>
        <member name="M:Cosmos.Dependency.AspectCoreProxyRegister.#ctor(AspectCore.DependencyInjection.IServiceContext)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Dependency.AspectCoreProxyRegister.IsRegistered(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Dependency.AspectCoreProxyRegister.IsRegistered``1">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Dependency.AspectCoreProxyRegister.IsRegistered(System.Type,Cosmos.Dependency.DependencyLifetimeType)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Dependency.AspectCoreProxyRegister.IsRegistered``1(Cosmos.Dependency.DependencyLifetimeType)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Dependency.AspectCoreProxyRegister.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Dependency.AspectCoreServiceResolver">
            <summary>
            NCC AspectCore service resolver
            </summary>
        </member>
        <member name="M:Cosmos.Dependency.AspectCoreServiceResolver.#ctor(AspectCore.DependencyInjection.IServiceResolver)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dependency.AspectCoreServiceResolver"/>.
            </summary>
            <param name="resolver"></param>
        </member>
        <member name="M:Cosmos.Dependency.AspectCoreServiceResolver.Resolve(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Dependency.AspectCoreServiceResolver.Resolve``1">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Dependency.AspectCoreServiceResolver.RequiredResolve(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Dependency.AspectCoreServiceResolver.RequiredResolve``1">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Dependency.AspectCoreServiceResolver.TryResolve(System.Type,System.Object@)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Dependency.AspectCoreServiceResolver.TryResolve``1(System.Object@)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Dependency.AspectCoreServiceResolver.ResolveMany(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Dependency.AspectCoreServiceResolver.ResolveMany``1">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Dependency.Events.AspectCoreEventPublisher">
            <summary>
            AspectCore Event Publisher
            </summary>
        </member>
        <member name="T:Cosmos.Dependency.Events.AspectCoreOriginBuildExtensions">
            <summary>
            AspectCore Original building extensions
            </summary>
        </member>
        <member name="M:Cosmos.Dependency.Events.AspectCoreOriginBuildExtensions.AddIocEventing(AspectCore.DependencyInjection.IServiceContext)">
            <summary>
            Add IoC Eventing Support
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dependency.Events.AspectCoreOriginBuildExtensions.AddIocEventMessage``2(AspectCore.DependencyInjection.IServiceContext)">
            <summary>
            Add IoC Eventing Message Support
            </summary>
            <param name="services"></param>
            <typeparam name="THandle"></typeparam>
            <typeparam name="TMessage"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dependency.Events.AspectCoreProxyBuildExtensions">
            <summary>
            AspectCore Proxy Building Extensions
            </summary>
        </member>
        <member name="M:Cosmos.Dependency.Events.AspectCoreProxyBuildExtensions.AddIocEventService(Cosmos.Dependency.AspectCoreProxyRegister)">
            <summary>
            Add IoC Event Service Support
            </summary>
            <param name="register"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dependency.Events.AspectCoreProxyBuildExtensions.AddIocEventHandle``2(Cosmos.Dependency.AspectCoreProxyRegister)">
            <summary>
            Add IoC Event Handle
            </summary>
            <param name="register"></param>
            <typeparam name="THandle"></typeparam>
            <typeparam name="TMessage"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dependency.LifetimeExtensions">
            <summary>
            Extensions for lifetime
            </summary>
        </member>
        <member name="M:Cosmos.Dependency.LifetimeExtensions.ToAspectCoreLifetime(Cosmos.Dependency.DependencyLifetimeType)">
            <summary>
            To NCC AspectCore lifetime
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dependency.ServiceResolverExtensions">
            <summary>
            Extensions for NCC AspectCore
            </summary>
        </member>
        <member name="M:Cosmos.Dependency.ServiceResolverExtensions.ToAbstract(AspectCore.DependencyInjection.IServiceResolver)">
            <summary>
            To abstract
            </summary>
            <param name="resolver"></param>
            <returns></returns>
        </member>
    </members>
</doc>
