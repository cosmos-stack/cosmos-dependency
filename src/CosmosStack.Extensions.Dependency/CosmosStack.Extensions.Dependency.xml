<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CosmosStack.Extensions.Dependency</name>
    </assembly>
    <members>
        <member name="T:CosmosStack.Dependency.DependencyLifetimeType">
            <summary>
            Lifetime type for register proxy <br />
            生命周期
            </summary>
        </member>
        <member name="F:CosmosStack.Dependency.DependencyLifetimeType.Scoped">
            <summary>
            Scoped
            </summary>
        </member>
        <member name="F:CosmosStack.Dependency.DependencyLifetimeType.Singleton">
            <summary>
            Singleton
            </summary>
        </member>
        <member name="F:CosmosStack.Dependency.DependencyLifetimeType.Transient">
            <summary>
            Transient
            </summary>
        </member>
        <member name="T:CosmosStack.Dependency.DependencyProxyDescriptor">
            <summary>
            Register proxy descriptor <br />
            注册描述符
            </summary>
        </member>
        <member name="P:CosmosStack.Dependency.DependencyProxyDescriptor.ServiceType">
            <summary>
            Service type
            </summary>
        </member>
        <member name="P:CosmosStack.Dependency.DependencyProxyDescriptor.ImplementationType">
            <summary>
            Implementation type
            </summary>
        </member>
        <member name="P:CosmosStack.Dependency.DependencyProxyDescriptor.ImplementationTypeSelf">
            <summary>
            Implementation type self
            </summary>
        </member>
        <member name="P:CosmosStack.Dependency.DependencyProxyDescriptor.InstanceOfImplementation">
            <summary>
            Instance of implementation
            </summary>
        </member>
        <member name="P:CosmosStack.Dependency.DependencyProxyDescriptor.InstanceFuncForImplementation">
            <summary>
            Instance func for implementation
            </summary>
        </member>
        <member name="P:CosmosStack.Dependency.DependencyProxyDescriptor.ResolveFuncForImplementation">
            <summary>
            Instance func for implementation
            </summary>
        </member>
        <member name="P:CosmosStack.Dependency.DependencyProxyDescriptor.CustomUnsafeDelegate">
            <summary>
            Custom Func <br />
            Please use it with care. If it is not necessary, do not use CustomFunc.
            </summary>
        </member>
        <member name="P:CosmosStack.Dependency.DependencyProxyDescriptor.ProxyType">
            <summary>
            Proxy type
            </summary>
        </member>
        <member name="P:CosmosStack.Dependency.DependencyProxyDescriptor.LifetimeType">
            <summary>
            Lifetime type
            </summary>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForService``2(CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Create
            </summary>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForService``2(``1,CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Create
            </summary>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <param name="instance"></param>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForService``1(System.Object,CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Create
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="instance"></param>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForInstanceSelf``1(CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Create
            </summary>
            <typeparam name="TImplementationSelf"></typeparam>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForType(System.Type,System.Type,CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Create
            </summary>
            <param name="serviceType"></param>
            <param name="implementationType"></param>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForObject(System.Object,System.Type,CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Create
            </summary>
            <param name="instance"></param>
            <param name="implementationType"></param>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForObjectDelegate(System.Func{System.Object},System.Type,CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Create
            </summary>
            <param name="instanceFunc"></param>
            <param name="implementationType"></param>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForServiceDelegate``2(System.Func{``1},CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Create
            </summary>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <param name="instanceFunc"></param>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForResolvedServiceDelegate``2(System.Func{CosmosStack.Dependency.IDefinedResolver,``1},CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Create
            </summary>
            <param name="instanceFunc"></param>
            <param name="lifetimeType"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForServiceDelegate``1(System.Func{System.Object},CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Create
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="instanceFunc"></param>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForResolvedServiceDelegate``1(System.Func{CosmosStack.Dependency.IDefinedResolver,System.Object},CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Create
            </summary>
            <param name="instanceFunc"></param>
            <param name="lifetimeType"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForInstanceDelegate``1(System.Func{``0},CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Create
            </summary>
            <typeparam name="TImplementation"></typeparam>
            <param name="instanceFunc"></param>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForResolvedInstanceDelegate``1(System.Func{CosmosStack.Dependency.IDefinedResolver,``0},CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Create
            </summary>
            <param name="instanceFunc"></param>
            <param name="lifetimeType"></param>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForInstanceDelegate(System.Func{System.Object},System.Type,CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Create
            </summary>
            <param name="instanceFunc"></param>
            <param name="implementationType"></param>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForResolvedObjectDelegate(System.Func{CosmosStack.Dependency.IDefinedResolver,System.Object},System.Type,CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Create
            </summary>
            <param name="instanceFunc"></param>
            <param name="implementationType"></param>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyDescriptor.CreateForCustomUnsafeDelegate``1(System.Func{``0,``0})">
            <summary>
            Create
            </summary>
            <param name="customUnsafeDelegate"></param>
            <typeparam name="TContext"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Dependency.DependencyProxyRegister">
            <summary>
            Register proxy bag <br />
            注册包
            </summary>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister.Register(CosmosStack.Dependency.DependencyProxyDescriptor)">
            <summary>
            Register <br />
            注册
            </summary>
            <param name="descriptor"></param>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister.TryRegister(CosmosStack.Dependency.DependencyProxyDescriptor)">
            <summary>
            Try Register <br />
            尝试注册
            </summary>
            <param name="descriptor"></param>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister.IsRegistered(System.Type)">
            <summary>
            Is Registered <br />
            标记是否已注册
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister.IsRegistered``1">
            <summary>
            Is Registered <br />
            标记是否已注册
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister.IsRegistered(System.Type,CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Is Registered <br />
            标记是否已注册
            </summary>
            <param name="type"></param>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister.IsRegistered``1(CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Is Registered <br />
            标记是否已注册
            </summary>
            <typeparam name="T"></typeparam>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister.ExportDescriptors">
            <summary>
            Export Descriptors <br />
            导出描述符
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister.Dispose">
            <summary>
            Dispose <br />
            释放
            </summary>
        </member>
        <member name="T:CosmosStack.Dependency.DependencyProxyRegister`1">
            <summary>
            Register proxy bag <br />
            注册包
            </summary>
            <typeparam name="TServices"></typeparam>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister`1.#ctor(`0)">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Dependency.DependencyProxyRegister`1.RawServices">
            <summary>
            Gets raw services <br />
            获取原始服务
            </summary>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister`1.AddPreRegister(System.String,System.Action{`0})">
            <summary>
            Add pre register action <br />
            增加注册前事件
            </summary>
            <param name="key"></param>
            <param name="registerAct"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister`1.AddPostRegister(System.String,System.Action{`0})">
            <summary>
            Add post register action <br />
            增加注册后事件
            </summary>
            <param name="key"></param>
            <param name="registerAct"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister`1.RemoveAllRegisters">
            <summary>
            Remove all register actions <br />
            移除所有注册事件
            </summary>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister`1.RemoveAllPreRegisters">
            <summary>
            Remove all pre register actions <br />
            移除所有注册前事件
            </summary>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister`1.RemoveAllPostRegisters">
            <summary>
            Remove all post register actions <br />
            移除所有注册后事件
            </summary>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister`1.RemovePreRegister(System.String)">
            <summary>
            Remove pre register action <br />
            移除指定名称的注册前事件
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister`1.RemovePostRegister(System.String)">
            <summary>
            Remove post register action <br />
            移除指定名称的注册后事件
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister`1.Dispose(System.Boolean)">
            <summary>
            Dispose <br />
            释放
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:CosmosStack.Dependency.DependencyProxyRegister`1.Dispose">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Dependency.DependencyProxyType">
            <summary>
            Register proxy type <br />
            注册类型
            </summary>
        </member>
        <member name="F:CosmosStack.Dependency.DependencyProxyType.TypeToType">
            <summary>
            Type to type
            </summary>
        </member>
        <member name="F:CosmosStack.Dependency.DependencyProxyType.TypeToInstance">
            <summary>
            Type to instance
            </summary>
        </member>
        <member name="F:CosmosStack.Dependency.DependencyProxyType.TypeToInstanceFunc">
            <summary>
            Type to instance func
            </summary>
        </member>
        <member name="F:CosmosStack.Dependency.DependencyProxyType.TypeToResolvedInstanceFunc">
            <summary>
            Type to resolved instance func
            </summary>
        </member>
        <member name="F:CosmosStack.Dependency.DependencyProxyType.TypeSelf">
            <summary>
            Type self
            </summary>
        </member>
        <member name="F:CosmosStack.Dependency.DependencyProxyType.InstanceSelf">
            <summary>
            Instance self
            </summary>
        </member>
        <member name="F:CosmosStack.Dependency.DependencyProxyType.InstanceSelfFunc">
            <summary>
            Instance self func
            </summary>
        </member>
        <member name="F:CosmosStack.Dependency.DependencyProxyType.ResolvedInstanceSelfFunc">
            <summary>
            Resolved instance self func
            </summary>
        </member>
        <member name="F:CosmosStack.Dependency.DependencyProxyType.CustomUnsafeDelegate">
            <summary>
            Custom func
            </summary>
        </member>
        <member name="T:CosmosStack.Dependency.Events.IEventPublisher">
            <summary>
            To publish an event
            </summary>
        </member>
        <member name="M:CosmosStack.Dependency.Events.IEventPublisher.Publish``1(``0)">
            <summary>
            Publish
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:CosmosStack.Dependency.Events.IAsyncEventPublisher">
            <summary>
            To publish an event asynchronously
            </summary>
        </member>
        <member name="M:CosmosStack.Dependency.Events.IAsyncEventPublisher.PublishAsync``1(``0)">
            <summary>
            Publish async
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Dependency.Events.EventPublisher">
            <summary>
            An abstract event publisher
            </summary>
        </member>
        <member name="M:CosmosStack.Dependency.Events.EventPublisher.Publish``1(``0)">
            <summary>
            Publish
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CosmosStack.Dependency.Events.EventPublisher.PublishAsync``1(``0)">
            <summary>
            Publish async
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Dependency.Events.IHandleEvent`1">
            <summary>
            Handle an event
            </summary>
            <typeparam name="TMessage"></typeparam>
        </member>
        <member name="M:CosmosStack.Dependency.Events.IHandleEvent`1.Handle(`0)">
            <summary>
            Handle
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:CosmosStack.Dependency.Events.IHandleEventAsync`1">
            <summary>
            Handle an event asynchronously
            </summary>
            <typeparam name="TMessage"></typeparam>
        </member>
        <member name="T:CosmosStack.Dependency.RegisterProxyBagExtensions">
            <summary>
            Extensions for Register proxy bag <br />
            注册包扩展
            </summary>
            <summary>
            Extensions for Register proxy bag <br />
            注册包扩展
            </summary>
            <summary>
            Extensions for Register proxy bag <br />
            注册包扩展
            </summary>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddScoped``2(CosmosStack.Dependency.DependencyProxyRegister)">
            <summary>
            Add Scoped
            </summary>
            <param name="bag"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddScoped``2(CosmosStack.Dependency.DependencyProxyRegister,``1)">
            <summary>
            Add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddScoped``2(CosmosStack.Dependency.DependencyProxyRegister,System.Func{``1})">
            <summary>
            Add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddScoped``2(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``1})">
            <summary>
            Add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddScoped``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{``0})">
            <summary>
            Add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddScoped``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{System.Object})">
            <summary>
            Add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddScoped``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``0})">
            <summary>
            Add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddScoped(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,System.Object},System.Type)">
            <summary>
            Add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <param name="implementationType"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddScoped``1(CosmosStack.Dependency.DependencyProxyRegister)">
            <summary>
            Add Scoped
            </summary>
            <param name="bag"></param>
            <typeparam name="TImplementationSelf"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddScoped(CosmosStack.Dependency.DependencyProxyRegister,System.Type,System.Type)">
            <summary>
            Add Scoped
            </summary>
            <param name="bag"></param>
            <param name="serviceType"></param>
            <param name="implementationType"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddScoped(CosmosStack.Dependency.DependencyProxyRegister,System.Object,System.Type)">
            <summary>
            Add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <param name="implementationType"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddScoped(CosmosStack.Dependency.DependencyProxyRegister,System.Func{System.Object},System.Type)">
            <summary>
            Add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <param name="implementationType"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddScopedService``1(CosmosStack.Dependency.DependencyProxyRegister,``0)">
            <summary>
            Add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddScopedService``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``0})">
            <summary>
            Add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddScopedService``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,System.Object})">
            <summary>
            Add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddScoped``2(CosmosStack.Dependency.DependencyProxyRegister)">
            <summary>
            Try add Scoped
            </summary>
            <param name="bag"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddScoped``2(CosmosStack.Dependency.DependencyProxyRegister,``1)">
            <summary>
            Try add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddScoped``2(CosmosStack.Dependency.DependencyProxyRegister,System.Func{``1})">
            <summary>
            Try add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddScoped``2(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``1})">
            <summary>
            Try add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddScoped``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{``0})">
            <summary>
            Try add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TImplementation"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddScoped``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{System.Object})">
            <summary>
            Try add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddScoped``1(CosmosStack.Dependency.DependencyProxyRegister)">
            <summary>
            Try add Scoped
            </summary>
            <param name="bag"></param>
            <typeparam name="TImplementationSelf"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddScoped``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``0})">
            <summary>
            Try add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TImplementation"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddScoped(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,System.Object},System.Type)">
            <summary>
            Try add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <param name="implementationType"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddScoped(CosmosStack.Dependency.DependencyProxyRegister,System.Type,System.Type)">
            <summary>
            Try add Scoped
            </summary>
            <param name="bag"></param>
            <param name="serviceType"></param>
            <param name="implementationType"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddScoped(CosmosStack.Dependency.DependencyProxyRegister,System.Object,System.Type)">
            <summary>
            Try add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <param name="implementationType"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddScoped(CosmosStack.Dependency.DependencyProxyRegister,System.Func{System.Object},System.Type)">
            <summary>
            Try add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <param name="implementationType"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddScopedService``1(CosmosStack.Dependency.DependencyProxyRegister,``0)">
            <summary>
            Try add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <typeparam name="TService"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddScopedService``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``0})">
            <summary>
            Try add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddScopedService``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,System.Object})">
            <summary>
            Try add Scoped
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddSingleton``2(CosmosStack.Dependency.DependencyProxyRegister)">
            <summary>
            Add singleton
            </summary>
            <param name="bag"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddSingleton``2(CosmosStack.Dependency.DependencyProxyRegister,``1)">
            <summary>
            Add singleton
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddSingleton``2(CosmosStack.Dependency.DependencyProxyRegister,System.Func{``1})">
            <summary>
            Add singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddSingleton``2(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``1})">
            <summary>
            Add singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddSingleton``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{``0})">
            <summary>
            Add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddSingleton``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{System.Object})">
            <summary>
            Add singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddSingleton``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``0})">
            <summary>
            Add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddSingleton(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,System.Object},System.Type)">
            <summary>
            Add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <param name="implementationType"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddSingleton``1(CosmosStack.Dependency.DependencyProxyRegister)">
            <summary>
            Add singleton
            </summary>
            <param name="bag"></param>
            <typeparam name="TImplementationSelf"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddSingleton(CosmosStack.Dependency.DependencyProxyRegister,System.Type,System.Type)">
            <summary>
            Add Singleton
            </summary>
            <param name="bag"></param>
            <param name="serviceType"></param>
            <param name="implementationType"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddSingleton(CosmosStack.Dependency.DependencyProxyRegister,System.Object,System.Type)">
            <summary>
            Add singleton
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <param name="implementationType"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddSingleton(CosmosStack.Dependency.DependencyProxyRegister,System.Func{System.Object},System.Type)">
            <summary>
            Add singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <param name="implementationType"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddSingletonService``1(CosmosStack.Dependency.DependencyProxyRegister,``0)">
            <summary>
            Add singleton
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddSingletonService``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``0})">
            <summary>
            Add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddSingletonService``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,System.Object})">
            <summary>
            Add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddSingleton``2(CosmosStack.Dependency.DependencyProxyRegister)">
            <summary>
            Try add Singleton
            </summary>
            <param name="bag"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddSingleton``2(CosmosStack.Dependency.DependencyProxyRegister,``1)">
            <summary>
            Try add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddSingleton``2(CosmosStack.Dependency.DependencyProxyRegister,System.Func{``1})">
            <summary>
            Try add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddSingleton``2(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``1})">
            <summary>
            Try add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddSingleton``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{``0})">
            <summary>
            Try add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TImplementation"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddSingleton``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{System.Object})">
            <summary>
            Try add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddSingleton``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``0})">
            <summary>
            Try add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TImplementation"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddSingleton(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,System.Object},System.Type)">
            <summary>
            Try add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <param name="implementationType"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddSingleton``1(CosmosStack.Dependency.DependencyProxyRegister)">
            <summary>
            Try add Singleton
            </summary>
            <param name="bag"></param>
            <typeparam name="TImplementationSelf"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddSingleton(CosmosStack.Dependency.DependencyProxyRegister,System.Type,System.Type)">
            <summary>
            Try add Singleton
            </summary>
            <param name="bag"></param>
            <param name="serviceType"></param>
            <param name="implementationType"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddSingleton(CosmosStack.Dependency.DependencyProxyRegister,System.Object,System.Type)">
            <summary>
            Try add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <param name="implementationType"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddSingleton(CosmosStack.Dependency.DependencyProxyRegister,System.Func{System.Object},System.Type)">
            <summary>
            Try add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <param name="implementationType"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddSingletonService``1(CosmosStack.Dependency.DependencyProxyRegister,``0)">
            <summary>
            Try add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <typeparam name="TService"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddSingletonService``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``0})">
            <summary>
            Try add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddSingletonService``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,System.Object})">
            <summary>
            Try add Singleton
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddTransient``2(CosmosStack.Dependency.DependencyProxyRegister)">
            <summary>
            Add Transient
            </summary>
            <param name="bag"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddTransient``2(CosmosStack.Dependency.DependencyProxyRegister,``1)">
            <summary>
            Add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddTransient``2(CosmosStack.Dependency.DependencyProxyRegister,System.Func{``1})">
            <summary>
            Add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddTransient``2(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``1})">
            <summary>
            Add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddTransient``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{``0})">
            <summary>
            Add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddTransient``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{System.Object})">
            <summary>
            Add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddTransient``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``0})">
            <summary>
            Add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddTransient(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,System.Object},System.Type)">
            <summary>
            Add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <param name="implementationType"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddTransient``1(CosmosStack.Dependency.DependencyProxyRegister)">
            <summary>
            Add Transient
            </summary>
            <param name="bag"></param>
            <typeparam name="TImplementationSelf"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddTransient(CosmosStack.Dependency.DependencyProxyRegister,System.Type,System.Type)">
            <summary>
            Add Transient
            </summary>
            <param name="bag"></param>
            <param name="serviceType"></param>
            <param name="implementationType"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddTransient(CosmosStack.Dependency.DependencyProxyRegister,System.Object,System.Type)">
            <summary>
            Add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <param name="implementationType"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddTransient(CosmosStack.Dependency.DependencyProxyRegister,System.Func{System.Object},System.Type)">
            <summary>
            Add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <param name="implementationType"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddTransientService``1(CosmosStack.Dependency.DependencyProxyRegister,``0)">
            <summary>
            Add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddTransientService``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``0})">
            <summary>
            Add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.AddTransientService``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,System.Object})">
            <summary>
            Add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddTransient``2(CosmosStack.Dependency.DependencyProxyRegister)">
            <summary>
            Try add Transient
            </summary>
            <param name="bag"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddTransient``2(CosmosStack.Dependency.DependencyProxyRegister,``1)">
            <summary>
            Try add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddTransient``2(CosmosStack.Dependency.DependencyProxyRegister,System.Func{``1})">
            <summary>
            Try add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddTransient``2(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``1})">
            <summary>
            Try add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImplementation"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddTransient``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{``0})">
            <summary>
            Try add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TImplementation"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddTransient``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{System.Object})">
            <summary>
            Try add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddTransient``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``0})">
            <summary>
            Try add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TImplementation"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddTransient(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,System.Object},System.Type)">
            <summary>
            Try add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <param name="implementationType"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddTransient``1(CosmosStack.Dependency.DependencyProxyRegister)">
            <summary>
            Try add Transient
            </summary>
            <param name="bag"></param>
            <typeparam name="TImplementationSelf"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddTransient(CosmosStack.Dependency.DependencyProxyRegister,System.Type,System.Type)">
            <summary>
            Try add Transient
            </summary>
            <param name="bag"></param>
            <param name="serviceType"></param>
            <param name="implementationType"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddTransient(CosmosStack.Dependency.DependencyProxyRegister,System.Object,System.Type)">
            <summary>
            Try add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <param name="implementationType"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddTransient(CosmosStack.Dependency.DependencyProxyRegister,System.Func{System.Object},System.Type)">
            <summary>
            Try add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <param name="implementationType"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddTransientService``1(CosmosStack.Dependency.DependencyProxyRegister,``0)">
            <summary>
            Try add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementation"></param>
            <typeparam name="TService"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddTransientService``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,``0})">
            <summary>
            Try add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Dependency.RegisterProxyBagExtensions.TryAddTransientService``1(CosmosStack.Dependency.DependencyProxyRegister,System.Func{CosmosStack.Dependency.IDefinedResolver,System.Object})">
            <summary>
            Try add Transient
            </summary>
            <param name="bag"></param>
            <param name="implementationFunc"></param>
            <typeparam name="TService"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:CosmosStack.Dependency.IDefinedResolver">
            <summary>
            Interface for service resolver <br />
            定义的服务解析器接口
            </summary>
        </member>
        <member name="M:CosmosStack.Dependency.IDefinedResolver.Resolve(System.Type)">
            <summary>
            Resolve <br />
            解析
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.IDefinedResolver.Resolve``1">
            <summary>
            Resolve <br />
            解析
            </summary>
            <typeparam name="TService"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.IDefinedResolver.RequiredResolve(System.Type)">
            <summary>
            Required resolve <br />
            必须解析
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.IDefinedResolver.RequiredResolve``1">
            <summary>
            Required resolve <br />
            必须解析
            </summary>
            <typeparam name="TService"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.IDefinedResolver.TryResolve(System.Type,System.Object@)">
            <summary>
            Try resolve <br />
            尝试解析
            </summary>
            <param name="serviceType"></param>
            <param name="resolvedService"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.IDefinedResolver.TryResolve``1(System.Object@)">
            <summary>
            Try resolve <br />
            尝试解析
            </summary>
            <param name="resolvedService"></param>
            <typeparam name="TService"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.IDefinedResolver.ResolveMany(System.Type)">
            <summary>
            Resolve many <br />
            解析一组
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.IDefinedResolver.ResolveMany``1">
            <summary>
            Resolve many <br />
            解析一组
            </summary>
            <typeparam name="TService"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Dependency.IDependencyProxyRegister">
            <summary>
            Dependency proxy register interface <br />
            依赖注册器接口
            </summary>
        </member>
        <member name="M:CosmosStack.Dependency.IDependencyProxyRegister.Register(CosmosStack.Dependency.DependencyProxyDescriptor)">
            <summary>
            Register <br />
            注册
            </summary>
            <param name="descriptor"></param>
        </member>
        <member name="M:CosmosStack.Dependency.IDependencyProxyRegister.TryRegister(CosmosStack.Dependency.DependencyProxyDescriptor)">
            <summary>
            Try register <br />
            尝试注册
            </summary>
            <param name="descriptor"></param>
        </member>
        <member name="M:CosmosStack.Dependency.IDependencyProxyRegister.IsRegistered(System.Type)">
            <summary>
            Is registered <br />
            标记是否已注册
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.IDependencyProxyRegister.IsRegistered``1">
            <summary>
            Is registered <br />
            标记是否已注册
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.IDependencyProxyRegister.IsRegistered(System.Type,CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Is registered <br />
            标记是否已注册
            </summary>
            <param name="type"></param>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Dependency.IDependencyProxyRegister.IsRegistered``1(CosmosStack.Dependency.DependencyLifetimeType)">
            <summary>
            Is registered <br />
            标记是否已注册
            </summary>
            <typeparam name="T"></typeparam>
            <param name="lifetimeType"></param>
            <returns></returns>
        </member>
    </members>
</doc>
